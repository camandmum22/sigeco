/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sigeco.ejb.entities;

import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 <p>
 @author csacanam
 */
@Entity
@XmlRootElement
@NamedQueries(
                {
            @NamedQuery( name = "Convocatoria.findAll", query = "SELECT c FROM Convocatoria c" ),
            @NamedQuery( name = "Convocatoria.findByCodigoConvocatoria", query = "SELECT c FROM Convocatoria c WHERE c.codigoConvocatoria = :codigoConvocatoria" ),
            @NamedQuery( name = "Convocatoria.findByNombre", query = "SELECT c FROM Convocatoria c WHERE c.nombre = :nombre" )
        } )
public class Convocatoria implements Serializable
{
    private static final long serialVersionUID = 1L;

    @Id
    @SequenceGenerator( name = "CONVOCATORIA_GENERATOR", sequenceName = "SQ_CONVOCATORIA", allocationSize = 1 )
    @GeneratedValue( strategy = GenerationType.SEQUENCE, generator = "CONVOCATORIA_GENERATOR" )
    @Basic( optional = false )
    @NotNull
    @Column( name = "CODIGO_CONVOCATORIA", nullable = false )
    private Long codigoConvocatoria;

    @Basic( optional = false )
    @NotNull
    @Size( min = 1, max = 50 )
    @Column( nullable = false, length = 50 )
    private String nombre;

    @OneToMany( cascade = CascadeType.ALL, mappedBy = "convocatoria", fetch = FetchType.LAZY )
    private List<ProConSol> proConSolList;

    @OneToMany( cascade = CascadeType.ALL, mappedBy = "convocatoria", fetch = FetchType.LAZY )
    private List<FacultadConvocatoria> facultadConvocatoriaList;

    @JoinColumn( name = "CODIGO_ESTADO", referencedColumnName = "CODIGO_ESTADO", nullable = false )
    @ManyToOne( optional = false, fetch = FetchType.LAZY )
    private Estado codigoEstado;

    @OneToMany( cascade = CascadeType.ALL, mappedBy = "codigoConvocatoria", fetch = FetchType.LAZY )
    private List<Fase> faseList;

    public Convocatoria()
    {
    }

    public Convocatoria( Long codigoConvocatoria )
    {
        this.codigoConvocatoria = codigoConvocatoria;
    }

    public Convocatoria( Long codigoConvocatoria, String nombre )
    {
        this.codigoConvocatoria = codigoConvocatoria;
        this.nombre = nombre;
    }

    public Long getCodigoConvocatoria()
    {
        return codigoConvocatoria;
    }

    public void setCodigoConvocatoria( Long codigoConvocatoria )
    {
        this.codigoConvocatoria = codigoConvocatoria;
    }

    public String getNombre()
    {
        return nombre;
    }

    public void setNombre( String nombre )
    {
        this.nombre = nombre;
    }

    @XmlTransient
    public List<ProConSol> getProConSolList()
    {
        return proConSolList;
    }

    public void setProConSolList( List<ProConSol> proConSolList )
    {
        this.proConSolList = proConSolList;
    }

    @XmlTransient
    public List<FacultadConvocatoria> getFacultadConvocatoriaList()
    {
        return facultadConvocatoriaList;
    }

    public void setFacultadConvocatoriaList( List<FacultadConvocatoria> facultadConvocatoriaList )
    {
        this.facultadConvocatoriaList = facultadConvocatoriaList;
    }

    public Estado getCodigoEstado()
    {
        return codigoEstado;
    }

    public void setCodigoEstado( Estado codigoEstado )
    {
        this.codigoEstado = codigoEstado;
    }

    @XmlTransient
    public List<Fase> getFaseList()
    {
        return faseList;
    }

    public void setFaseList( List<Fase> faseList )
    {
        this.faseList = faseList;
    }

    @Override
    public int hashCode()
    {
        int hash = 0;
        hash += ( codigoConvocatoria != null ? codigoConvocatoria.hashCode() : 0 );
        return hash;
    }

    @Override
    public boolean equals( Object object )
    {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if( !( object instanceof Convocatoria ) )
        {
            return false;
        }
        Convocatoria other = (Convocatoria)object;
        if( ( this.codigoConvocatoria == null && other.codigoConvocatoria != null ) || ( this.codigoConvocatoria != null && !this.codigoConvocatoria.equals( other.codigoConvocatoria ) ) )
        {
            return false;
        }
        return true;
    }

    @Override
    public String toString()
    {
        return "com.sigeco.ejb.entities.Convocatoria[ codigoConvocatoria=" + codigoConvocatoria + " ]";
    }
}
